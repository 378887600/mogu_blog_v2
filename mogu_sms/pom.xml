<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
  <parent>
    <groupId>com.moxi</groupId>
    <artifactId>mogu_blog</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>mogu_sms</artifactId>
  <packaging>war</packaging>
  <name>mogu_sms</name>
  <description>sms project for Spring Boot</description>
  
  <properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	<java.version>1.8</java.version>
  </properties>
  
  <dependencies>
  
  	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter</artifactId>
	</dependency>
			
	<dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <!-- 如果在使用自带tomcat请注释下面，如果使用第三方tomcat不要注释下面 -->
         <exclusions>  
             <exclusion>  
                 <groupId>org.springframework.boot</groupId>  
                 <artifactId>spring-boot-starter-tomcat</artifactId>  
             </exclusion>  
         </exclusions> 
   	</dependency>
   	
   	
   	<!-- <dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>servlet-api</artifactId>
	    <version>3.0-alpha-1</version>
   		<scope>provided</scope>
	</dependency> -->
	
	
	<dependency>
	    <groupId>org.apache.tomcat</groupId>
	    <artifactId>tomcat-servlet-api</artifactId>
	    <version>8.0.36</version>
	    <scope>provided</scope>
	</dependency>
    
    <dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
  
    <!-- 热部署
    	devtolls可以实现页面热部署(即页面修改后会立即生效)，这个可以直接在application.properties文件中配置        	  
    	spring.thymeleaf.cache=false来实现 -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>
    </dependency>
       
    <!-- 添加Eureka相关依赖 -->
	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-eureka</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-actuator</artifactId>
	</dependency>
    
    <dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-feign</artifactId>
	</dependency>
    
    <dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-amqp</artifactId>
	</dependency>
	
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-mail</artifactId>
	</dependency>
	
    <dependency>
   		<groupId>com.aliyun</groupId>
   		<artifactId>aliyun-java-sdk-dysmsapi</artifactId>
   		<version>1.0.0</version>
   	</dependency>
   	
   	<dependency>
   		<groupId>com.aliyun</groupId>
   		<artifactId>aliyun-java-sdk-core</artifactId>
   		<version>3.2.5</version>
   	</dependency>
   	
   	<!-- email -->
	<dependency>
	    <groupId>javax.mail</groupId>
	    <artifactId>mail</artifactId>
	    <version>1.4</version>
	</dependency>
   	
   	<!--  
   	<dependency> 
	    <groupId>org.springframework.boot</groupId> 
	    <artifactId>spring-boot-configuration-processor</artifactId> 
	    <optional>true</optional> 
  	</dependency> 
  	-->
  	
  </dependencies>
  
  
  
  <!--spring boot打包的话需要指定一个唯一的入门-->
    <build>
		  <resources>
		   <resource>
		       <directory>src/main/java</directory>
		       <includes>
		           <include>**/*.xml</include>
		       </includes>
		   </resource>
		   <resource>
		       <directory>src/main/resources</directory>
		       <includes>
		           <include>**.*</include>
		           <include>**/*.*</include><!-- i18n能读取到 -->
		            <include>**/*/*.*</include>
		       </includes>
		   </resource>
		 </resources>
        <plugins>
            <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-war-plugin</artifactId>
			    <configuration>
			        <warName>mogu_sms</warName>
			        <failOnMissingWebXml>false</failOnMissingWebXml>
                 	<outputDirectory>webapps</outputDirectory>
			    </configuration>
            </plugin>
        </plugins>
        <finalName>mogu_sms</finalName>
    </build>
  
</project>